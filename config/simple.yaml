admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address:
      protocol: TCP
      address: 0.0.0.0
      port_value: 9901

static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address:
        protocol: TCP
        address: 0.0.0.0
        port_value: 10000
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          generate_request_id: true
          tracing:
            operation_name: egress
          access_log:
          - name: envoy.file_access_log
            config:
              path: "/dev/stdout"
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: service_echo
          http_filters:
          - name: envoy.lua
            typed_config:
              "@type": type.googleapis.com/envoy.config.filter.http.lua.v2.Lua
              inline_code: |
                local entrypoint = require('./entrypoint')
                envoy_on_request = entrypoint.envoy_on_request
                envoy_on_response = entrypoint.envoy_on_response
          - name: envoy.filters.http.header_to_metadata
            config:
              request_rules:
                - header: x-mode
                  on_header_present:
                    metadata_namespace: envoy.lb
                    key: type
                    type: STRING
          - name: envoy.router
            typed_config: {}

  clusters:
  - name: service_echo
    connect_timeout: 0.25s
    type: STRICT_DNS
    dns_lookup_family: V4_ONLY
    lb_subset_config:
        fallback_policy: DEFAULT_SUBSET
        subset_selectors:
          - keys:
            - type
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: service_echo
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address: {"address": "srv_echo_rw", "port_value": 8080}
          metadata:
            filter_metadata: {"envoy.lb": {"type": "rw"}}
        - endpoint:
            address:
              socket_address: {"address": "srv_echo_ro", "port_value": 8080}
          metadata:
            filter_metadata: {"envoy.lb": {"type": "ro"}}

  - name: zipkin
    connect_timeout: 1s
    type: strict_dns
    lb_policy: round_robin
    load_assignment:
      cluster_name: zipkin
      endpoints:
        - lb_endpoints:
          - endpoint:
              address:
                socket_address: {"address": "zipkin", "port_value": 9411}

tracing:
  http:
    name: envoy.zipkin
    typed_config:
      "@type": type.googleapis.com/envoy.config.trace.v2.ZipkinConfig
      collector_cluster: zipkin
      collector_endpoint: "/api/v1/spans"
